---
- name: Install bind9 packages
  ansible.builtin.apt:
    pkg: "{{ bind9_packages }}"
    state: present
    cache_valid_time: 600

- name: Create bind9 directory for keys
  ansible.builtin.file:
    path: "{{ bind9_keydir }}"
    state: directory
    owner: "{{ bind9_user }}"
    group: "{{ bind9_group }}"
    mode: '02750'
  when: bind9_authoritative | default()

- name: Disable IPv6
  ansible.builtin.lineinfile:
    path: /etc/default/named
    regexp: '^OPTIONS="-u bind"'
    line: 'OPTIONS="-u bind -4"'
  when: not bind9_enable_ipv6
  notify:
    - Restart bind9

- name: Create dynamic DNS keys
  ansible.builtin.include_tasks: create_ddns_keys.yml
  loop: "{{ bind9_zones }}"
  loop_control:
    label: "{{ item.name }}"
  when: bind9_generate_ddns_key | bool

- name: Ensure existence of the log directory
  ansible.builtin.file:
    path: "{{ bind9_log_path }}"
    state: directory
    owner: "{{ bind9_user }}"
    group: "{{ bind9_group }}"
    mode: '0755'
  when: bind9_named_logging

- name: Configure bind9 named.conf files
  ansible.builtin.template:
    src: "{{ bind9_templates | default('') }}bind/{{ item }}.j2"
    dest: /etc/bind/{{ item }}
    owner: root
    group: "{{ bind9_group }}"
    mode: "0644"
  loop:
    - named.conf.local
    - named.conf.options
  notify:
    - Reload bind9

- name: Check validity of named.conf
  ansible.builtin.command: named-checkconf
  register: bind9_reg_named_checkconf
  become: true
  become_user: "{{ bind9_user }}"
  changed_when: false
  vars:
    ansible_ssh_pipelining: true

- name: Create bind9 zone files
  ansible.builtin.template:
    src: "{{ bind9_templates | default('') }}bind/zones/db.template.j2"
    dest: "{{ bind9_zonedir }}/db.{{ item.name }}"
    owner: root
    group: "{{ bind9_group }}"
    mode: "0644"
  loop: "{{ bind9_zones }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - bind9_authoritative | default()
    - item.type | default(bind9_zone_type) == 'primary'
  notify:
    - Reload bind9

- name: Check validity of zone files
  ansible.builtin.command: named-checkzone {{ item.name }} {{ bind9_zonedir }}/db.{{ item.name }}
  register: bind9_reg_named_checkzone
  become: true
  become_user: "{{ bind9_user }}"
  loop: "{{ bind9_zones }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.type | default(bind9_zone_type) == 'primary'
  changed_when: false
  vars:
    ansible_ssh_pipelining: true
